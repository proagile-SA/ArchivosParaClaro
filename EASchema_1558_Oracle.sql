/* ------------------------------------------------------------ */
/*  Generated by Enterprise Architect Version 15.2              */
/*  Created On : 02-Feb-2021 15:20:02                           */
/*  DBMS       : Oracle                                         */
/*  Notes      : Script to create EA schema                     */
/* ------------------------------------------------------------ */



/* Drop Tables */

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_ATTRIBUTE" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_ATTRIBUTECONSTRAINTS" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_ATTRIBUTETAG" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_AUTHORS" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_CARDINALITY" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_CATEGORY" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_CLIENTS" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_COMPLEXITYTYPES" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_CONNECTOR" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_CONNECTORCONSTRAINT" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_CONNECTORTAG" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_CONNECTORTYPES" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_CONSTANTS" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_CONSTRAINTTYPES" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_DATATYPES" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_DIAGRAM" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_DIAGRAMLINKS" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_DIAGRAMOBJECTS" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_DIAGRAMTYPES" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_DOCUMENT" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_ECF" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_EFFORTTYPES" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_FILES" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_GENOPT" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_GLOSSARY" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_HTML" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_IMAGE" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_IMPLEMENT" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_ISSUES" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_LISTS" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_MAINTTYPES" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_METHOD" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_METRICTYPES" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_OBJECT" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_OBJECTCONSTRAINT" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_OBJECTEFFORT" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_OBJECTFILES" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_OBJECTMETRICS" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_OBJECTPROBLEMS" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_OBJECTPROPERTIES" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_OBJECTREQUIRES" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_OBJECTRESOURCE" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_OBJECTRISKS" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_OBJECTSCENARIOS" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_OBJECTTESTS" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_OBJECTTRX" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_OBJECTTYPES" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_OCF" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_OPERATION" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_OPERATIONPARAMS" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_OPERATIONPOSTS" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_OPERATIONPRES" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_OPERATIONTAG" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_PACKAGE" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_PALETTE" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_PALETTEITEM" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_PHASE" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_PRIMITIVES" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_PROBLEMTYPES" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_PROJECTROLES" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_PROPERTYTYPES" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_REQUIRETYPES" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_RESOURCES" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_RISKTYPES" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_ROLECONSTRAINT" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_RTF" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_RTFREPORT" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_RULES" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_SCENARIOTYPES" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_SCRIPT" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_SECGROUP" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_SECGROUPPERMISSION" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_SECLOCKS" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_SECPERMISSION" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_SECPOLICIES" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_SECUSER" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_SECUSERGROUP" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_SECUSERPERMISSION" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_SNAPSHOT" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_STATUSTYPES" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_STEREOTYPES" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_TAGGEDVALUE" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_TASKS" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_TCF" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_TEMPLATE" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_TESTCLASS" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_TESTPLANS" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_TESTTYPES" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_TRXTYPES" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_UMLPATTERN" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_VERSION" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_XREF" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_XREFSYSTEM" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "T_XREFUSER" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE   "USYS_SCHEMA" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "USYS_SYSTEM" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "USYSOLDTABLES" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "USYSQUERIES" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  "USYSTABLES" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

/* Drop Sequences */

DECLARE 
  C NUMBER; 
BEGIN 
SELECT COUNT(*) INTO C 
FROM ALL_SEQUENCES 
  WHERE SEQUENCE_OWNER = USER 
  AND SEQUENCE_NAME = 'CATEGORYID_SEQ'; 
  IF (C > 0) THEN 
    EXECUTE IMMEDIATE 'DROP SEQUENCE "CATEGORYID_SEQ"'; 
END IF; 
END; 
/

DECLARE 
  C NUMBER; 
BEGIN 
SELECT COUNT(*) INTO C 
FROM ALL_SEQUENCES 
  WHERE SEQUENCE_OWNER = USER 
  AND SEQUENCE_NAME = 'CONNECTOR_ID_SEQ'; 
  IF (C > 0) THEN 
    EXECUTE IMMEDIATE 'DROP SEQUENCE "CONNECTOR_ID_SEQ"'; 
END IF; 
END; 
/

DECLARE 
  C NUMBER; 
BEGIN 
SELECT COUNT(*) INTO C 
FROM ALL_SEQUENCES 
  WHERE SEQUENCE_OWNER = USER 
  AND SEQUENCE_NAME = 'DATATYPEID_SEQ'; 
  IF (C > 0) THEN 
    EXECUTE IMMEDIATE 'DROP SEQUENCE "DATATYPEID_SEQ"'; 
END IF; 
END; 
/

DECLARE 
  C NUMBER; 
BEGIN 
SELECT COUNT(*) INTO C 
FROM ALL_SEQUENCES 
  WHERE SEQUENCE_OWNER = USER 
  AND SEQUENCE_NAME = 'DIAGRAM_ID_SEQ'; 
  IF (C > 0) THEN 
    EXECUTE IMMEDIATE 'DROP SEQUENCE "DIAGRAM_ID_SEQ"'; 
END IF; 
END; 
/

DECLARE 
  C NUMBER; 
BEGIN 
SELECT COUNT(*) INTO C 
FROM ALL_SEQUENCES 
  WHERE SEQUENCE_OWNER = USER 
  AND SEQUENCE_NAME = 'GLOSSARYID_SEQ'; 
  IF (C > 0) THEN 
    EXECUTE IMMEDIATE 'DROP SEQUENCE "GLOSSARYID_SEQ"'; 
END IF; 
END; 
/

DECLARE 
  C NUMBER; 
BEGIN 
SELECT COUNT(*) INTO C 
FROM ALL_SEQUENCES 
  WHERE SEQUENCE_OWNER = USER 
  AND SEQUENCE_NAME = 'ID_SEQ'; 
  IF (C > 0) THEN 
    EXECUTE IMMEDIATE 'DROP SEQUENCE "ID_SEQ"'; 
END IF; 
END; 
/

DECLARE 
  C NUMBER; 
BEGIN 
SELECT COUNT(*) INTO C 
FROM ALL_SEQUENCES 
  WHERE SEQUENCE_OWNER = USER 
  AND SEQUENCE_NAME = 'IMAGEID_SEQ'; 
  IF (C > 0) THEN 
    EXECUTE IMMEDIATE 'DROP SEQUENCE "IMAGEID_SEQ"'; 
END IF; 
END; 
/

DECLARE 
  C NUMBER; 
BEGIN 
SELECT COUNT(*) INTO C 
FROM ALL_SEQUENCES 
  WHERE SEQUENCE_OWNER = USER 
  AND SEQUENCE_NAME = 'INSTANCE_ID_SEQ'; 
  IF (C > 0) THEN 
    EXECUTE IMMEDIATE 'DROP SEQUENCE "INSTANCE_ID_SEQ"'; 
END IF; 
END; 
/

DECLARE 
  C NUMBER; 
BEGIN 
SELECT COUNT(*) INTO C 
FROM ALL_SEQUENCES 
  WHERE SEQUENCE_OWNER = USER 
  AND SEQUENCE_NAME = 'ISSUEID_SEQ'; 
  IF (C > 0) THEN 
    EXECUTE IMMEDIATE 'DROP SEQUENCE "ISSUEID_SEQ"'; 
END IF; 
END; 
/

DECLARE 
  C NUMBER; 
BEGIN 
SELECT COUNT(*) INTO C 
FROM ALL_SEQUENCES 
  WHERE SEQUENCE_OWNER = USER 
  AND SEQUENCE_NAME = 'OBJECT_ID_SEQ'; 
  IF (C > 0) THEN 
    EXECUTE IMMEDIATE 'DROP SEQUENCE "OBJECT_ID_SEQ"'; 
END IF; 
END; 
/

DECLARE 
  C NUMBER; 
BEGIN 
SELECT COUNT(*) INTO C 
FROM ALL_SEQUENCES 
  WHERE SEQUENCE_OWNER = USER 
  AND SEQUENCE_NAME = 'OPERATIONID_SEQ'; 
  IF (C > 0) THEN 
    EXECUTE IMMEDIATE 'DROP SEQUENCE "OPERATIONID_SEQ"'; 
END IF; 
END; 
/

DECLARE 
  C NUMBER; 
BEGIN 
SELECT COUNT(*) INTO C 
FROM ALL_SEQUENCES 
  WHERE SEQUENCE_OWNER = USER 
  AND SEQUENCE_NAME = 'PACKAGE_ID_SEQ'; 
  IF (C > 0) THEN 
    EXECUTE IMMEDIATE 'DROP SEQUENCE "PACKAGE_ID_SEQ"'; 
END IF; 
END; 
/

DECLARE 
  C NUMBER; 
BEGIN 
SELECT COUNT(*) INTO C 
FROM ALL_SEQUENCES 
  WHERE SEQUENCE_OWNER = USER 
  AND SEQUENCE_NAME = 'PALETTEID_SEQ'; 
  IF (C > 0) THEN 
    EXECUTE IMMEDIATE 'DROP SEQUENCE "PALETTEID_SEQ"'; 
END IF; 
END; 
/

DECLARE 
  C NUMBER; 
BEGIN 
SELECT COUNT(*) INTO C 
FROM ALL_SEQUENCES 
  WHERE SEQUENCE_OWNER = USER 
  AND SEQUENCE_NAME = 'PATTERNID_SEQ'; 
  IF (C > 0) THEN 
    EXECUTE IMMEDIATE 'DROP SEQUENCE "PATTERNID_SEQ"'; 
END IF; 
END; 
/

DECLARE 
  C NUMBER; 
BEGIN 
SELECT COUNT(*) INTO C 
FROM ALL_SEQUENCES 
  WHERE SEQUENCE_OWNER = USER 
  AND SEQUENCE_NAME = 'PROPERTYID_SEQ'; 
  IF (C > 0) THEN 
    EXECUTE IMMEDIATE 'DROP SEQUENCE "PROPERTYID_SEQ"'; 
END IF; 
END; 
/

DECLARE 
  C NUMBER; 
BEGIN 
SELECT COUNT(*) INTO C 
FROM ALL_SEQUENCES 
  WHERE SEQUENCE_OWNER = USER 
  AND SEQUENCE_NAME = 'REQID_SEQ'; 
  IF (C > 0) THEN 
    EXECUTE IMMEDIATE 'DROP SEQUENCE "REQID_SEQ"'; 
END IF; 
END; 
/

DECLARE 
  C NUMBER; 
BEGIN 
SELECT COUNT(*) INTO C 
FROM ALL_SEQUENCES 
  WHERE SEQUENCE_OWNER = USER 
  AND SEQUENCE_NAME = 'SCRIPTID_SEQ'; 
  IF (C > 0) THEN 
    EXECUTE IMMEDIATE 'DROP SEQUENCE "SCRIPTID_SEQ"'; 
END IF; 
END; 
/

DECLARE 
  C NUMBER; 
BEGIN 
SELECT COUNT(*) INTO C 
FROM ALL_SEQUENCES 
  WHERE SEQUENCE_OWNER = USER 
  AND SEQUENCE_NAME = 'TASKID_SEQ'; 
  IF (C > 0) THEN 
    EXECUTE IMMEDIATE 'DROP SEQUENCE "TASKID_SEQ"'; 
END IF; 
END; 
/

DECLARE 
  C NUMBER; 
BEGIN 
SELECT COUNT(*) INTO C 
FROM ALL_SEQUENCES 
  WHERE SEQUENCE_OWNER = USER 
  AND SEQUENCE_NAME = 'TRX_ID_SEQ'; 
  IF (C > 0) THEN 
    EXECUTE IMMEDIATE 'DROP SEQUENCE "TRX_ID_SEQ"'; 
END IF; 
END; 
/

/* Create Sequences */

CREATE SEQUENCE CATEGORYID_SEQ MINVALUE 0 START WITH 1 
/

CREATE SEQUENCE CONNECTOR_ID_SEQ MINVALUE 0 START WITH 1 
/

CREATE SEQUENCE DATATYPEID_SEQ MINVALUE 0 START WITH 1 
/

CREATE SEQUENCE DIAGRAM_ID_SEQ MINVALUE 0 START WITH 1 
/

CREATE SEQUENCE GLOSSARYID_SEQ MINVALUE 0 START WITH 1 
/

CREATE SEQUENCE ID_SEQ MINVALUE 0 START WITH 1 
/

CREATE SEQUENCE IMAGEID_SEQ MINVALUE 0 START WITH 1 
/

CREATE SEQUENCE INSTANCE_ID_SEQ MINVALUE 0 START WITH 1 
/

CREATE SEQUENCE ISSUEID_SEQ MINVALUE 0 START WITH 1 
/

CREATE SEQUENCE OBJECT_ID_SEQ MINVALUE 0 START WITH 1 
/

CREATE SEQUENCE OPERATIONID_SEQ MINVALUE 0 START WITH 1 
/

CREATE SEQUENCE PACKAGE_ID_SEQ MINVALUE 0 START WITH 1 
/

CREATE SEQUENCE PALETTEID_SEQ MINVALUE 0 START WITH 1 
/

CREATE SEQUENCE PATTERNID_SEQ MINVALUE 0 START WITH 1 
/

CREATE SEQUENCE PROPERTYID_SEQ MINVALUE 0 START WITH 1 
/

CREATE SEQUENCE REQID_SEQ MINVALUE 0 START WITH 1 
/

CREATE SEQUENCE SCRIPTID_SEQ MINVALUE 0 START WITH 1 
/

CREATE SEQUENCE TASKID_SEQ MINVALUE 0 START WITH 1 
/

CREATE SEQUENCE TRX_ID_SEQ MINVALUE 0 START WITH 1 
/

/* Create Tables */

CREATE TABLE "T_ATTRIBUTE"
(
	"OBJECT_ID" NUMBER(10) DEFAULT 0  NOT NULL,
	"NAME" VARCHAR2(255 CHAR) NOT NULL,
	"SCOPE" VARCHAR2(50 CHAR),
	"STEREOTYPE" VARCHAR2(50 CHAR),
	"CONTAINMENT" VARCHAR2(50 CHAR),
	"ISSTATIC" NUMBER(10) DEFAULT 0,
	"ISCOLLECTION" NUMBER(10) DEFAULT 0,
	"ISORDERED" NUMBER(10) DEFAULT 0,
	"ALLOWDUPLICATES" NUMBER(10) DEFAULT 0,
	"LOWERBOUND" VARCHAR2(50 CHAR),
	"UPPERBOUND" VARCHAR2(50 CHAR),
	"CONTAINER" VARCHAR2(50 CHAR),
	"NOTES" CLOB,
	"DERIVED" CHAR(1 CHAR),
	"ID" NUMBER(10) NOT NULL,
	"POS" NUMBER(10),
	"GENOPTION" CLOB,
	"LENGTH" NUMBER(10),
	"PRECISION" NUMBER(10),
	"SCALE" NUMBER(10),
	"CONST" NUMBER(10),
	"STYLE" VARCHAR2(255 CHAR),
	"CLASSIFIER" VARCHAR2(50 CHAR),
	"Default" CLOB,
	"TYPE" VARCHAR2(255 CHAR),
	"EA_GUID" VARCHAR2(50 CHAR),
	"STYLEEX" CLOB,
	CONSTRAINT "PK_ATTRIBUTE" PRIMARY KEY ("ID"),
	CONSTRAINT "UQ_ATTRIBUTE_EAGUID" UNIQUE ("EA_GUID")
)
;
CREATE INDEX "IX_ATTRIBUTE_CLASSIFIER"   
 ON "T_ATTRIBUTE" ("CLASSIFIER") 
;
CREATE INDEX "IX_ATTRIBUTE_NAME"   
 ON "T_ATTRIBUTE" ("NAME") 
;
CREATE INDEX "IX_ATTRIBUTE_OBJECTID"   
 ON "T_ATTRIBUTE" ("OBJECT_ID") 
;
CREATE INDEX "IX_ATTRIBUTE_TYPE"   
 ON "T_ATTRIBUTE" ("TYPE") 
;
/

CREATE TABLE "T_ATTRIBUTECONSTRAINTS"
(
	"OBJECT_ID" NUMBER(10) DEFAULT 0,
	"Constraint" VARCHAR2(255 CHAR) NOT NULL,
	"ATTNAME" VARCHAR2(255 CHAR),
	"TYPE" VARCHAR2(255 CHAR),
	"NOTES" CLOB,
	"ID" NUMBER(10) NOT NULL,
	CONSTRAINT "PK_ATTRIBUTECONSTRAINTS" PRIMARY KEY ("ID","Constraint")
)
;
CREATE INDEX "IX_ATTRIBUTECONSTRAINTS_OBJID"   
 ON "T_ATTRIBUTECONSTRAINTS" ("OBJECT_ID") 
;
/

CREATE TABLE "T_ATTRIBUTETAG"
(
	"PROPERTYID" NUMBER(10) NOT NULL,
	"ELEMENTID" NUMBER(10),
	"PROPERTY" VARCHAR2(255 CHAR),
	"VALUE" VARCHAR2(255 CHAR),
	"NOTES" CLOB,
	"EA_GUID" VARCHAR2(40 CHAR),
	CONSTRAINT "PK_ATTRIBUTETAG" PRIMARY KEY ("PROPERTYID")
)
;
CREATE INDEX "IX_ATTRIBUTETAG_ELEMENTID"   
 ON "T_ATTRIBUTETAG" ("ELEMENTID") 
;
CREATE INDEX "IX_ATTRIBUTETAG_VALUE"   
 ON "T_ATTRIBUTETAG" ("VALUE") 
;
CREATE INDEX "IX_ATTRIBUTETAG_EAGUID"   
 ON "T_ATTRIBUTETAG" ("EA_GUID") 
;
CREATE INDEX "IX_ATTRIBUTETAG_ELEMENTIDPROP"   
 ON "T_ATTRIBUTETAG" ("ELEMENTID","PROPERTY") 
;
CREATE INDEX "IX_ATTRIBUTETAG_PROPERTY"   
 ON "T_ATTRIBUTETAG" ("PROPERTY") 
;
/

CREATE TABLE "T_AUTHORS"
(
	"AUTHORNAME" VARCHAR2(255 CHAR) NOT NULL,
	"ROLES" VARCHAR2(255 CHAR),
	"NOTES" VARCHAR2(255 CHAR),
	CONSTRAINT "PK_AUTHORS" PRIMARY KEY ("AUTHORNAME")
)
;
/

CREATE TABLE "T_CARDINALITY"
(
	"CARDINALITY" VARCHAR2(50 CHAR) NOT NULL,
	CONSTRAINT "PK_CARDINALITY" PRIMARY KEY ("CARDINALITY")
)
;
/

CREATE TABLE "T_CATEGORY"
(
	"CATEGORYID" NUMBER(10) NOT NULL,
	"NAME" VARCHAR2(255 CHAR),
	"TYPE" VARCHAR2(255 CHAR),
	"NOTES" CLOB,
	CONSTRAINT "PK_CATEGORY" PRIMARY KEY ("CATEGORYID")
)
;
/

CREATE TABLE "T_CLIENTS"
(
	"NAME" VARCHAR2(255 CHAR) NOT NULL,
	"ORGANISATION" VARCHAR2(255 CHAR),
	"PHONE1" VARCHAR2(50 CHAR),
	"PHONE2" VARCHAR2(50 CHAR),
	"MOBILE" VARCHAR2(50 CHAR),
	"FAX" VARCHAR2(50 CHAR),
	"EMAIL" VARCHAR2(50 CHAR),
	"ROLES" VARCHAR2(255 CHAR),
	"NOTES" VARCHAR2(255 CHAR),
	CONSTRAINT "PK_CLIENTS" PRIMARY KEY ("NAME")
)
;
/

CREATE TABLE "T_COMPLEXITYTYPES"
(
	"COMPLEXITY" VARCHAR2(50 CHAR) NOT NULL,
	"NUMERICWEIGHT" NUMBER(10) DEFAULT 0,
	CONSTRAINT "PK_COMPLEXITYTYPES" PRIMARY KEY ("COMPLEXITY")
)
;
CREATE INDEX "IX_COMPLEXITYTYPES_NUMWEIGHT"   
 ON "T_COMPLEXITYTYPES" ("NUMERICWEIGHT") 
;
/

CREATE TABLE "T_CONNECTOR"
(
	"CONNECTOR_ID" NUMBER(10) NOT NULL,
	"NAME" VARCHAR2(255 CHAR),
	"DIRECTION" VARCHAR2(50 CHAR),
	"NOTES" CLOB,
	"CONNECTOR_TYPE" VARCHAR2(50 CHAR) NOT NULL,
	"SUBTYPE" VARCHAR2(50 CHAR),
	"SOURCECARD" VARCHAR2(50 CHAR),
	"SOURCEACCESS" VARCHAR2(50 CHAR),
	"SOURCEELEMENT" VARCHAR2(50 CHAR),
	"DESTCARD" VARCHAR2(50 CHAR),
	"DESTACCESS" VARCHAR2(50 CHAR),
	"DESTELEMENT" VARCHAR2(50 CHAR),
	"SOURCEROLE" VARCHAR2(255 CHAR),
	"SOURCEROLETYPE" VARCHAR2(50 CHAR),
	"SOURCEROLENOTE" CLOB,
	"SOURCECONTAINMENT" VARCHAR2(50 CHAR),
	"SOURCEISAGGREGATE" NUMBER(10) DEFAULT '0',
	"SOURCEISORDERED" NUMBER(10) DEFAULT '0',
	"SOURCEQUALIFIER" VARCHAR2(50 CHAR),
	"DESTROLE" VARCHAR2(255 CHAR),
	"DESTROLETYPE" VARCHAR2(50 CHAR),
	"DESTROLENOTE" CLOB,
	"DESTCONTAINMENT" VARCHAR2(50 CHAR),
	"DESTISAGGREGATE" NUMBER(10) DEFAULT '0',
	"DESTISORDERED" NUMBER(10) DEFAULT '0',
	"DESTQUALIFIER" VARCHAR2(50 CHAR),
	"START_OBJECT_ID" NUMBER(10) DEFAULT '0'  NOT NULL,
	"END_OBJECT_ID" NUMBER(10) DEFAULT '0'  NOT NULL,
	"TOP_START_LABEL" VARCHAR2(50 CHAR),
	"TOP_MID_LABEL" VARCHAR2(50 CHAR),
	"TOP_END_LABEL" VARCHAR2(50 CHAR),
	"BTM_START_LABEL" VARCHAR2(50 CHAR),
	"BTM_MID_LABEL" VARCHAR2(50 CHAR),
	"BTM_END_LABEL" VARCHAR2(50 CHAR),
	"START_EDGE" NUMBER(10) DEFAULT '0',
	"END_EDGE" NUMBER(10) DEFAULT '0',
	"PTSTARTX" NUMBER(10) DEFAULT '0',
	"PTSTARTY" NUMBER(10) DEFAULT '0',
	"PTENDX" NUMBER(10) DEFAULT '0',
	"PTENDY" NUMBER(10) DEFAULT '0',
	"SEQNO" NUMBER(10) DEFAULT '0',
	"HEADSTYLE" NUMBER(10) DEFAULT '0',
	"LINESTYLE" NUMBER(10) DEFAULT '0',
	"ROUTESTYLE" NUMBER(10) DEFAULT '0',
	"ISBOLD" NUMBER(10) DEFAULT '0',
	"LINECOLOR" NUMBER(10) DEFAULT '0',
	"STEREOTYPE" VARCHAR2(50 CHAR),
	"VIRTUALINHERITANCE" CHAR(1 CHAR),
	"LINKACCESS" VARCHAR2(50 CHAR),
	"PDATA1" VARCHAR2(255 CHAR),
	"PDATA2" CLOB,
	"PDATA3" VARCHAR2(255 CHAR),
	"PDATA4" VARCHAR2(255 CHAR),
	"PDATA5" CLOB,
	"DIAGRAMID" NUMBER(10) DEFAULT '0',
	"EA_GUID" VARCHAR2(40 CHAR) NOT NULL,
	"SOURCECONSTRAINT" VARCHAR2(255 CHAR),
	"DESTCONSTRAINT" VARCHAR2(255 CHAR),
	"SOURCEISNAVIGABLE" NUMBER(10),
	"DESTISNAVIGABLE" NUMBER(10),
	"ISROOT" NUMBER(10),
	"ISLEAF" NUMBER(10),
	"ISSPEC" NUMBER(10),
	"SOURCECHANGEABLE" VARCHAR2(12 CHAR),
	"DESTCHANGEABLE" VARCHAR2(12 CHAR),
	"SOURCETS" VARCHAR2(12 CHAR),
	"DESTTS" VARCHAR2(12 CHAR),
	"STATEFLAGS" CLOB,
	"ACTIONFLAGS" VARCHAR2(255 CHAR),
	"ISSIGNAL" NUMBER(10),
	"ISSTIMULUS" NUMBER(10),
	"DISPATCHACTION" VARCHAR2(255 CHAR),
	"TARGET2" NUMBER(10),
	"STYLEEX" CLOB,
	"SOURCESTEREOTYPE" VARCHAR2(255 CHAR),
	"DESTSTEREOTYPE" VARCHAR2(255 CHAR),
	"SOURCESTYLE" CLOB,
	"DESTSTYLE" CLOB,
	"EVENTFLAGS" VARCHAR2(255 CHAR),
	CONSTRAINT "PK_CONNECTOR" PRIMARY KEY ("CONNECTOR_ID"),
	CONSTRAINT "UQ_CONN_EAGUID" UNIQUE ("EA_GUID")
)
;
CREATE INDEX "IX_CONNECTOR_CONNECTORTYPE"   
 ON "T_CONNECTOR" ("CONNECTOR_TYPE") 
;
CREATE INDEX "IX_CONNECTOR_DIAGRAMID"   
 ON "T_CONNECTOR" ("DIAGRAMID") 
;
CREATE INDEX "IX_CONNECTOR_ENDOBJIDCONNID"   
 ON "T_CONNECTOR" ("END_OBJECT_ID","CONNECTOR_ID") 
;
CREATE INDEX "IX_CONNECTOR_ENDOBJECTID"   
 ON "T_CONNECTOR" ("END_OBJECT_ID") 
;
CREATE INDEX "IX_CONNECTOR_SEQNO"   
 ON "T_CONNECTOR" ("SEQNO") 
;
CREATE INDEX "IX_CONNECTOR_STARTOBJIDCONNID"   
 ON "T_CONNECTOR" ("START_OBJECT_ID","CONNECTOR_ID") 
;
CREATE INDEX "IX_CONNECTOR_STARTOBJECTID"   
 ON "T_CONNECTOR" ("START_OBJECT_ID") 
;
CREATE INDEX "IX_CONNECTOR_PDATA1"   
 ON "T_CONNECTOR" ("PDATA1") 
;
CREATE INDEX "IX_CONNECTOR_PDATA3"   
 ON "T_CONNECTOR" ("PDATA3") 
;
CREATE INDEX "IX_CONNECTOR_SUBTYPE"   
 ON "T_CONNECTOR" ("SUBTYPE") 
;
/

CREATE TABLE "T_CONNECTORCONSTRAINT"
(
	"CONNECTORID" NUMBER(10) DEFAULT '0'  NOT NULL,
	"Constraint" VARCHAR2(255 CHAR) NOT NULL,
	"CONSTRAINTTYPE" VARCHAR2(50 CHAR),
	"NOTES" CLOB,
	CONSTRAINT "PK_CONNECTORCONSTRAINT" PRIMARY KEY ("CONNECTORID","Constraint")
)
;
CREATE INDEX "IX_CONNECTORCONSTRAINT_CONNID"   
 ON "T_CONNECTORCONSTRAINT" ("CONNECTORID") 
;
CREATE INDEX "IX_CONNECTORCONSTRAINT_CONSTR"   
 ON "T_CONNECTORCONSTRAINT" ("Constraint") 
;
/

CREATE TABLE "T_CONNECTORTAG"
(
	"PROPERTYID" NUMBER(10) NOT NULL,
	"ELEMENTID" NUMBER(10),
	"PROPERTY" VARCHAR2(255 CHAR),
	"VALUE" VARCHAR2(255 CHAR),
	"NOTES" CLOB,
	"EA_GUID" VARCHAR2(40 CHAR),
	CONSTRAINT "PK_CONNECTORTAG" PRIMARY KEY ("PROPERTYID")
)
;
CREATE INDEX "IX_CONNECTORTAG_ELEMENTID"   
 ON "T_CONNECTORTAG" ("ELEMENTID") 
;
CREATE INDEX "IX_CONNECTORTAG_PROPERTY"   
 ON "T_CONNECTORTAG" ("PROPERTY") 
;
CREATE INDEX "IX_CONNECTORTAG_VALUE"   
 ON "T_CONNECTORTAG" ("VALUE") 
;
CREATE INDEX "IX_CONNECTORTAG_EAGUID"   
 ON "T_CONNECTORTAG" ("EA_GUID") 
;
/

CREATE TABLE "T_CONNECTORTYPES"
(
	"CONNECTOR_TYPE" VARCHAR2(50 CHAR) NOT NULL,
	"DESCRIPTION" VARCHAR2(50 CHAR),
	CONSTRAINT "PK_CONNECTORTYPES" PRIMARY KEY ("CONNECTOR_TYPE")
)
;
/

CREATE TABLE "T_CONSTANTS"
(
	"CONSTANTNAME" VARCHAR2(50 CHAR) NOT NULL,
	"CONSTANTVALUE" VARCHAR2(255 CHAR),
	CONSTRAINT "PK_CONSTANTS" PRIMARY KEY ("CONSTANTNAME")
)
;
/

CREATE TABLE "T_CONSTRAINTTYPES"
(
	"Constraint" VARCHAR2(16 CHAR) NOT NULL,
	"DESCRIPTION" VARCHAR2(50 CHAR),
	"NOTES" CLOB,
	CONSTRAINT "PK_CONSTRAINTTYPES" PRIMARY KEY ("Constraint")
)
;
/

CREATE TABLE "T_DATATYPES"
(
	"TYPE" VARCHAR2(50 CHAR) NOT NULL,
	"PRODUCTNAME" VARCHAR2(50 CHAR) NOT NULL,
	"DATATYPE" VARCHAR2(50 CHAR),
	"Size" NUMBER(10),
	"MAXLEN" NUMBER(10),
	"MAXPREC" NUMBER(10),
	"MAXSCALE" NUMBER(10) DEFAULT 0,
	"DEFAULTLEN" NUMBER(10),
	"DEFAULTPREC" NUMBER(10),
	"DEFAULTSCALE" NUMBER(10),
	"User" NUMBER(10),
	"PDATA1" VARCHAR2(255 CHAR),
	"PDATA2" VARCHAR2(255 CHAR),
	"PDATA3" VARCHAR2(255 CHAR),
	"PDATA4" VARCHAR2(255 CHAR),
	"HASLENGTH" VARCHAR2(50 CHAR),
	"GENERICTYPE" VARCHAR2(255 CHAR),
	"DATATYPEID" NUMBER(10) NOT NULL,
	CONSTRAINT "PK_DATATYPES" PRIMARY KEY ("DATATYPEID")
)
;
CREATE INDEX "IX_DATATYPES_DATATYPE"   
 ON "T_DATATYPES" ("DATATYPE") 
;
CREATE INDEX "IX_DATATYPES_PRODUCTNAME"   
 ON "T_DATATYPES" ("PRODUCTNAME") 
;
/

CREATE TABLE "T_DIAGRAM"
(
	"DIAGRAM_ID" NUMBER(10) NOT NULL,
	"PACKAGE_ID" NUMBER(10) DEFAULT 1  NOT NULL,
	"PARENTID" NUMBER(10) DEFAULT 0,
	"DIAGRAM_TYPE" VARCHAR2(50 CHAR),
	"NAME" VARCHAR2(255 CHAR),
	"VERSION" VARCHAR2(50 CHAR) DEFAULT '1.0',
	"AUTHOR" VARCHAR2(255 CHAR),
	"SHOWDETAILS" NUMBER(10) DEFAULT 0,
	"NOTES" CLOB,
	"STEREOTYPE" VARCHAR2(50 CHAR),
	"ATTPUB" NUMBER(10) DEFAULT 1,
	"ATTPRI" NUMBER(10) DEFAULT 1,
	"ATTPRO" NUMBER(10) DEFAULT 1,
	"ORIENTATION" CHAR(1 CHAR) DEFAULT 'P',
	"CX" NUMBER(10) DEFAULT 0,
	"CY" NUMBER(10) DEFAULT 0,
	"SCALE" NUMBER(10) DEFAULT 100,
	"CREATEDDATE" DATE DEFAULT SYSDATE,
	"MODIFIEDDATE" DATE DEFAULT SYSDATE,
	"HTMLPATH" VARCHAR2(255 CHAR),
	"SHOWFOREIGN" NUMBER(10) DEFAULT 1,
	"SHOWBORDER" NUMBER(10) DEFAULT 1,
	"SHOWPACKAGECONTENTS" NUMBER(10) DEFAULT 1,
	"PDATA" VARCHAR2(255 CHAR),
	"LOCKED" NUMBER(10),
	"EA_GUID" VARCHAR2(40 CHAR) NOT NULL,
	"TPOS" NUMBER(10),
	"SWIMLANES" VARCHAR2(255 CHAR),
	"STYLEEX" CLOB,
	CONSTRAINT "PK_DIAGRAM" PRIMARY KEY ("DIAGRAM_ID"),
	CONSTRAINT "UQ_DIAGRAM_EAGUID" UNIQUE ("EA_GUID")
)
;
CREATE INDEX "IX_DIAGRAM_DIAGRAMTYPE"   
 ON "T_DIAGRAM" ("DIAGRAM_TYPE") 
;
CREATE INDEX "IX_DIAGRAM_PACKAGEID"   
 ON "T_DIAGRAM" ("PACKAGE_ID") 
;
CREATE INDEX "IX_DIAGRAM_PARENTID"   
 ON "T_DIAGRAM" ("PARENTID") 
;
/

CREATE TABLE "T_DIAGRAMLINKS"
(
	"DIAGRAMID" NUMBER(10) NOT NULL,
	"CONNECTORID" NUMBER(10) NOT NULL,
	"GEOMETRY" CLOB,
	"STYLE" VARCHAR2(255 CHAR),
	"HIDDEN" NUMBER(10),
	"PATH" VARCHAR2(255 CHAR),
	"INSTANCE_ID" NUMBER(10) NOT NULL,
	CONSTRAINT "PK_DIAGRAMLINKS" PRIMARY KEY ("INSTANCE_ID")
)
;
CREATE INDEX "IX_DIAGRAMLINKS_CONNECTORID"   
 ON "T_DIAGRAMLINKS" ("CONNECTORID") 
;
CREATE INDEX "IX_DIAGRAMLINKS_DIAGRAMID"   
 ON "T_DIAGRAMLINKS" ("DIAGRAMID") 
;
/

CREATE TABLE "T_DIAGRAMOBJECTS"
(
	"DIAGRAM_ID" NUMBER(10) DEFAULT 0,
	"OBJECT_ID" NUMBER(10) DEFAULT 0,
	"RECTTOP" NUMBER(10) DEFAULT 0,
	"RECTLEFT" NUMBER(10) DEFAULT 0,
	"RECTRIGHT" NUMBER(10) DEFAULT 0,
	"RECTBOTTOM" NUMBER(10) DEFAULT 0,
	"SEQUENCE" NUMBER(10) DEFAULT 0,
	"OBJECTSTYLE" VARCHAR2(255 CHAR),
	"INSTANCE_ID" NUMBER(10) NOT NULL,
	CONSTRAINT "PK_DIAGRAMOBJECTS" PRIMARY KEY ("INSTANCE_ID")
)
;
CREATE INDEX "IX_DIAGRAMOBJECT_DIAGRAMID"   
 ON "T_DIAGRAMOBJECTS" ("DIAGRAM_ID") 
;
CREATE INDEX "IX_DIAGRAMOBJECT_OBJECTID"   
 ON "T_DIAGRAMOBJECTS" ("OBJECT_ID") 
;
CREATE INDEX "IX_DIAGRAMOBJECT_SEQUENCE"   
 ON "T_DIAGRAMOBJECTS" ("SEQUENCE") 
;
/

CREATE TABLE "T_DIAGRAMTYPES"
(
	"DIAGRAM_TYPE" VARCHAR2(50 CHAR) NOT NULL,
	"NAME" VARCHAR2(255 CHAR),
	"PACKAGE_ID" NUMBER(10) DEFAULT 0  NOT NULL,
	CONSTRAINT "PK_DIAGRAMTYPES" PRIMARY KEY ("DIAGRAM_TYPE")
)
;
CREATE INDEX "IX_DIAGRAMTYPES_PACKAGEID"   
 ON "T_DIAGRAMTYPES" ("PACKAGE_ID") 
;
/

CREATE TABLE "T_DOCUMENT"
(
	"DOCID" VARCHAR2(40 CHAR) NOT NULL,
	"DOCNAME" VARCHAR2(100 CHAR),
	"NOTES" VARCHAR2(255 CHAR),
	"STYLE" VARCHAR2(255 CHAR),
	"ELEMENTID" VARCHAR2(40 CHAR) NOT NULL,
	"ELEMENTTYPE" VARCHAR2(50 CHAR) NOT NULL,
	"STRCONTENT" CLOB,
	"BINCONTENT" BLOB,
	"DOCTYPE" VARCHAR2(100 CHAR),
	"AUTHOR" VARCHAR2(255 CHAR),
	"VERSION" VARCHAR2(50 CHAR),
	"ISACTIVE" NUMBER(10),
	"SEQUENCE" NUMBER(10),
	"DOCDATE" DATE,
	CONSTRAINT "PK_DOCUMENT" PRIMARY KEY ("DOCID")
)
;
CREATE INDEX "IX_DOCUMENT_ELEMENTID"   
 ON "T_DOCUMENT" ("ELEMENTID") 
;
CREATE INDEX "IX_DOCUMENT_AUTHOR"   
 ON "T_DOCUMENT" ("AUTHOR") 
;
CREATE INDEX "IX_DOCUMENT_DOCTYPE"   
 ON "T_DOCUMENT" ("DOCTYPE") 
;
CREATE INDEX "IX_DOCUMENT_STYLE"
 ON "T_DOCUMENT" ("STYLE") 
;
CREATE INDEX "IX_DOCUMENT_VERSION"
 ON "T_DOCUMENT" ("VERSION") 
;
/

CREATE TABLE "T_ECF"
(
	"ECFID" VARCHAR2(12 CHAR) NOT NULL,
	"DESCRIPTION" VARCHAR2(50 CHAR),
	"WEIGHT" FLOAT(126) DEFAULT 1  NOT NULL,
	"VALUE" FLOAT(126) DEFAULT 0,
	"NOTES" VARCHAR2(255 CHAR),
	CONSTRAINT "PK_ECF" PRIMARY KEY ("ECFID")
)
;
CREATE INDEX "IX_ECF_WEIGHT"   
 ON "T_ECF" ("WEIGHT") 
;
/

CREATE TABLE "T_EFFORTTYPES"
(
	"EFFORTTYPE" VARCHAR2(12 CHAR) NOT NULL,
	"DESCRIPTION" VARCHAR2(255 CHAR),
	"NUMERICWEIGHT" FLOAT(126) DEFAULT 0  NOT NULL,
	"NOTES" VARCHAR2(255 CHAR),
	CONSTRAINT "PK_EFFORTTYPES" PRIMARY KEY ("EFFORTTYPE")
)
;
CREATE INDEX "IX_EFFORTTYPES_NUMERICWEIGHT"   
 ON "T_EFFORTTYPES" ("NUMERICWEIGHT") 
;
/

CREATE TABLE "T_FILES"
(
	"FILEID" VARCHAR2(50 CHAR) NOT NULL,
	"APPLIESTO" VARCHAR2(50 CHAR) NOT NULL,
	"CATEGORY" VARCHAR2(100 CHAR) NOT NULL,
	"NAME" VARCHAR2(150 CHAR) NOT NULL,
	"File" VARCHAR2(255 CHAR),
	"NOTES" CLOB,
	"FILEDATE" DATE,
	"FILESIZE" NUMBER(10),
	CONSTRAINT "PK_FILES" PRIMARY KEY ("FILEID")
)
;
CREATE INDEX "IX_FILES_APPLIESTO"   
 ON  "T_FILES" ("APPLIESTO")
;
CREATE INDEX "IX_FILES_APPLIESTONAME"   
 ON  "T_FILES" ("APPLIESTO","NAME")
;
CREATE INDEX "IX_FILES_APPLIESTONAMESIZE"   
 ON  "T_FILES" ("APPLIESTO","NAME","FILESIZE")
;
CREATE INDEX "IX_FILES_APPLIESTONAMEDATESIZE"   
 ON  "T_FILES" ("APPLIESTO","NAME","FILEDATE","FILESIZE")
;
CREATE INDEX "IX_FILES_CATEGORY"   
 ON  "T_FILES" ("CATEGORY")
;
CREATE INDEX "IX_FILES_FILESIZE"   
 ON  "T_FILES" ("FILESIZE")
;
CREATE INDEX "IX_FILES_NAME"   
 ON  "T_FILES" ("NAME")
;
/

CREATE TABLE "T_GENOPT"
(
	"APPLIESTO" VARCHAR2(12 CHAR),
	"Option" CLOB
)
;
/

CREATE TABLE "T_GLOSSARY"
(
	"TERM" VARCHAR2(255 CHAR),
	"TYPE" VARCHAR2(255 CHAR),
	"MEANING" CLOB,
	"GLOSSARYID" NUMBER(10) NOT NULL,
	CONSTRAINT "PK_GLOSSARY" PRIMARY KEY ("GLOSSARYID")
)
;
CREATE INDEX "IX_GLOSSARY_TERM"   
 ON "T_GLOSSARY" ("TERM") 
;
CREATE INDEX "IX_GLOSSARY_TYPE"   
 ON "T_GLOSSARY" ("TYPE") 
;
/

CREATE TABLE "T_HTML"
(
	"TYPE" VARCHAR2(50 CHAR),
	"TEMPLATE" CLOB
)
;
/

CREATE TABLE "T_IMAGE"
(
	"IMAGEID" NUMBER(10) NOT NULL,
	"NAME" VARCHAR2(255 CHAR),
	"TYPE" VARCHAR2(255 CHAR),
	"IMAGE" BLOB,
	CONSTRAINT "PK_IMAGE" PRIMARY KEY ("IMAGEID")
)
;
/

CREATE TABLE "T_IMPLEMENT"
(
	"TYPE" VARCHAR2(50 CHAR)
)
;
/

CREATE TABLE "T_ISSUES"
(
	"ISSUE" VARCHAR2(255 CHAR),
	"ISSUEDATE" DATE,
	"OWNER" VARCHAR2(255 CHAR),
	"STATUS" VARCHAR2(50 CHAR),
	"NOTES" CLOB,
	"RESOLVER" VARCHAR2(255 CHAR),
	"DATERESOLVED" DATE,
	"RESOLUTION" CLOB,
	"ISSUEID" NUMBER(10) NOT NULL,
	"CATEGORY" VARCHAR2(255 CHAR),
	"PRIORITY" VARCHAR2(50 CHAR),
	"SEVERITY" VARCHAR2(50 CHAR),
	"ISSUETYPE" VARCHAR2(100 CHAR),
	CONSTRAINT "PK_ISSUES" PRIMARY KEY ("ISSUEID")
)
;
/

CREATE TABLE "T_LISTS"
(
	"LISTID" VARCHAR2(50 CHAR) NOT NULL,
	"CATEGORY" VARCHAR2(100 CHAR) NOT NULL,
	"NAME" VARCHAR2(150 CHAR) NOT NULL,
	"NVAL" NUMBER(10),
	"NOTES" CLOB,
	CONSTRAINT "PK_LISTS" PRIMARY KEY ("LISTID")
)
;
/

CREATE TABLE "T_MAINTTYPES"
(
	"MAINTTYPE" VARCHAR2(12 CHAR) NOT NULL,
	"DESCRIPTION" VARCHAR2(50 CHAR),
	"NUMERICWEIGHT" FLOAT(126) DEFAULT 1  NOT NULL,
	"NOTES" VARCHAR2(255 CHAR),
	CONSTRAINT "PK_MAINTTYPES" PRIMARY KEY ("MAINTTYPE")
)
;
CREATE INDEX "IX_MAINTTYPES_NUMERICWEIGHT"   
 ON "T_MAINTTYPES" ("NUMERICWEIGHT") 
;
/

CREATE TABLE "T_METHOD"
(
	"OBJECT_ID" NUMBER(10) NOT NULL,
	"NAME" VARCHAR2(255 CHAR) NOT NULL,
	"SCOPE" VARCHAR2(50 CHAR),
	"TYPE" VARCHAR2(50 CHAR),
	CONSTRAINT "PK_METHOD" PRIMARY KEY ("OBJECT_ID","NAME")
)
;
CREATE INDEX "IX_METHOD_OBJECTID"   
 ON "T_METHOD" ("OBJECT_ID") 
;
/

CREATE TABLE "T_METRICTYPES"
(
	"METRIC" VARCHAR2(12 CHAR) NOT NULL,
	"DESCRIPTION" VARCHAR2(50 CHAR),
	"NUMERICWEIGHT" FLOAT(126) DEFAULT 1  NOT NULL,
	"NOTES" VARCHAR2(255 CHAR),
	CONSTRAINT "PK_METRICTYPES" PRIMARY KEY ("METRIC")
)
;
CREATE INDEX "IX_METRICTYPES_NUMERICWEIGHT"   
 ON "T_METRICTYPES" ("NUMERICWEIGHT") 
;
/

CREATE TABLE "T_OBJECT"
(
	"OBJECT_ID" NUMBER(10) NOT NULL,
	"OBJECT_TYPE" VARCHAR2(255 CHAR),
	"DIAGRAM_ID" NUMBER(10) DEFAULT 0,
	"NAME" VARCHAR2(255 CHAR),
	"ALIAS" VARCHAR2(255 CHAR),
	"AUTHOR" VARCHAR2(255 CHAR),
	"VERSION" VARCHAR2(50 CHAR) DEFAULT '1.0',
	"NOTE" CLOB,
	"PACKAGE_ID" NUMBER(10) DEFAULT 0  NOT NULL,
	"STEREOTYPE" VARCHAR2(255 CHAR),
	"NTYPE" NUMBER(10) DEFAULT 0,
	"COMPLEXITY" VARCHAR2(50 CHAR) DEFAULT 2,
	"EFFORT" NUMBER(10) DEFAULT 0,
	"STYLE" VARCHAR2(255 CHAR),
	"BACKCOLOR" NUMBER(10) DEFAULT 0,
	"BORDERSTYLE" NUMBER(10) DEFAULT 0,
	"BORDERWIDTH" NUMBER(10) DEFAULT 0,
	"FONTCOLOR" NUMBER(10) DEFAULT 0,
	"BORDERCOLOR" NUMBER(10) DEFAULT 0,
	"CREATEDDATE" DATE DEFAULT SYSDATE,
	"MODIFIEDDATE" DATE DEFAULT SYSDATE,
	"STATUS" VARCHAR2(50 CHAR),
	"ABSTRACT" CHAR(1 CHAR),
	"TAGGED" NUMBER(10) DEFAULT 0,
	"PDATA1" VARCHAR2(255 CHAR),
	"PDATA2" CLOB,
	"PDATA3" CLOB,
	"PDATA4" CLOB,
	"PDATA5" VARCHAR2(255 CHAR),
	"CONCURRENCY" VARCHAR2(50 CHAR),
	"VISIBILITY" VARCHAR2(50 CHAR),
	"PERSISTENCE" VARCHAR2(50 CHAR),
	"CARDINALITY" VARCHAR2(50 CHAR),
	"GENTYPE" VARCHAR2(50 CHAR),
	"GENFILE" VARCHAR2(255 CHAR),
	"HEADER1" CLOB,
	"HEADER2" CLOB,
	"PHASE" VARCHAR2(50 CHAR),
	"SCOPE" VARCHAR2(25 CHAR),
	"GENOPTION" CLOB,
	"GENLINKS" CLOB,
	"CLASSIFIER" NUMBER(10),
	"EA_GUID" VARCHAR2(40 CHAR) NOT NULL,
	"PARENTID" NUMBER(10),
	"RUNSTATE" CLOB,
	"CLASSIFIER_GUID" VARCHAR2(40 CHAR),
	"TPOS" NUMBER(10),
	"ISROOT" NUMBER(10),
	"ISLEAF" NUMBER(10),
	"ISSPEC" NUMBER(10),
	"ISACTIVE" NUMBER(10),
	"STATEFLAGS" VARCHAR2(255 CHAR),
	"PACKAGEFLAGS" VARCHAR2(255 CHAR),
	"MULTIPLICITY" VARCHAR2(50 CHAR),
	"STYLEEX" CLOB,
	"ACTIONFLAGS" VARCHAR2(255 CHAR),
	"EVENTFLAGS" VARCHAR2(255 CHAR),
	CONSTRAINT "PK_OBJECT" PRIMARY KEY ("OBJECT_ID"),
	CONSTRAINT "UQ_OBJ_EAGUID" UNIQUE ("EA_GUID")
)
;
CREATE INDEX "IX_OBJECT_CLASSIFIER"   
 ON "T_OBJECT" ("CLASSIFIER") 
;
CREATE INDEX "IX_OBJECT_CLASSIFIERGUID"   
 ON "T_OBJECT" ("CLASSIFIER_GUID") 
;
CREATE INDEX "IX_OBJECT_EVENTFLAGS"   
 ON "T_OBJECT" ("EVENTFLAGS") 
;
CREATE INDEX "IX_OBJECT_NAME"   
 ON "T_OBJECT" ("NAME") 
;
CREATE INDEX "IX_OBJECT_NTYPE"   
 ON "T_OBJECT" ("NTYPE") 
;
CREATE INDEX "IX_OBJECT_OBJECTTYPE"   
 ON "T_OBJECT" ("OBJECT_TYPE") 
;
CREATE INDEX "IX_OBJECT_PACKAGEID"   
 ON "T_OBJECT" ("PACKAGE_ID") 
;
CREATE INDEX "IX_OBJECT_PARENTID"   
 ON "T_OBJECT" ("PARENTID") 
;
CREATE INDEX "IX_OBJECT_PDATA1"   
 ON "T_OBJECT" ("PDATA1") 
;
CREATE INDEX "IX_OBJECT_PKGIDPDATA1CLASS"   
 ON "T_OBJECT" ("PACKAGE_ID","PDATA1","CLASSIFIER") 
;
CREATE INDEX "IX_OBJECT_PDATA5"   
 ON "T_OBJECT" ("PDATA5") 
;
CREATE INDEX "IX_OBJECT_EAGUIDCLASSIFIER"   
 ON "T_OBJECT" ("EA_GUID","CLASSIFIER") 
;
/

CREATE TABLE "T_OBJECTCONSTRAINT"
(
	"OBJECT_ID" NUMBER(10) DEFAULT 0  NOT NULL,
	"Constraint" VARCHAR2(255 CHAR) NOT NULL,
	"CONSTRAINTTYPE" VARCHAR2(30 CHAR) NOT NULL,
	"WEIGHT" FLOAT(126) DEFAULT 0,
	"NOTES" CLOB,
	"STATUS" VARCHAR2(50 CHAR),
	CONSTRAINT "PK_OBJECTCONSTRAINT" PRIMARY KEY ("OBJECT_ID","Constraint","CONSTRAINTTYPE")
)
;
CREATE INDEX "IX_OBJECTCONSTRAINT_CONSTR"   
 ON "T_OBJECTCONSTRAINT" ("Constraint") 
;
CREATE INDEX "IX_OBJECTCONSTRAINT_OBJECTID"   
 ON "T_OBJECTCONSTRAINT" ("OBJECT_ID") 
;
/

CREATE TABLE "T_OBJECTEFFORT"
(
	"OBJECT_ID" NUMBER(10) DEFAULT 0  NOT NULL,
	"EFFORT" VARCHAR2(255 CHAR) NOT NULL,
	"EFFORTTYPE" VARCHAR2(12 CHAR),
	"EVALUE" FLOAT(126) DEFAULT 0,
	"NOTES" CLOB,
	CONSTRAINT "PK_OBJECTEFFORT" PRIMARY KEY ("OBJECT_ID","EFFORT")
)
;
CREATE INDEX "IX_OBJECTEFFORT_OBJECTID"   
 ON "T_OBJECTEFFORT" ("OBJECT_ID") 
;
/

CREATE TABLE "T_OBJECTFILES"
(
	"OBJECT_ID" NUMBER(10) DEFAULT 0  NOT NULL,
	"FILENAME" VARCHAR2(255 CHAR) NOT NULL,
	"TYPE" VARCHAR2(50 CHAR),
	"NOTE" CLOB,
	"FILESIZE" VARCHAR2(255 CHAR),
	"FILEDATE" VARCHAR2(255 CHAR),
	CONSTRAINT "PK_OBJECTFILES" PRIMARY KEY ("OBJECT_ID","FILENAME")
)
;
/

CREATE TABLE "T_OBJECTMETRICS"
(
	"OBJECT_ID" NUMBER(10) DEFAULT 0  NOT NULL,
	"METRIC" VARCHAR2(255 CHAR) NOT NULL,
	"METRICTYPE" VARCHAR2(12 CHAR) NOT NULL,
	"EVALUE" FLOAT(126) DEFAULT 1,
	"NOTES" CLOB,
	CONSTRAINT "PK_OBJECTMETRICS" PRIMARY KEY ("OBJECT_ID","METRIC")
)
;
CREATE INDEX "IX_OBJECTMETRIC_METRIC"   
 ON "T_OBJECTMETRICS" ("METRIC") 
;
CREATE INDEX "IX_OBJECTMETRIC_METRICTYPE"   
 ON "T_OBJECTMETRICS" ("METRICTYPE") 
;
CREATE INDEX "IX_OBJECTMETRIC_OBJECTID"   
 ON "T_OBJECTMETRICS" ("OBJECT_ID") 
;
/

CREATE TABLE "T_OBJECTPROBLEMS"
(
	"OBJECT_ID" NUMBER(10) DEFAULT 0  NOT NULL,
	"PROBLEM" VARCHAR2(255 CHAR) NOT NULL,
	"PROBLEMTYPE" VARCHAR2(255 CHAR) NOT NULL,
	"DATEREPORTED" DATE,
	"STATUS" VARCHAR2(50 CHAR),
	"PROBLEMNOTES" CLOB,
	"REPORTEDBY" VARCHAR2(255 CHAR),
	"RESOLVEDBY" VARCHAR2(255 CHAR),
	"DATERESOLVED" DATE,
	"VERSION" VARCHAR2(50 CHAR),
	"RESOLVERNOTES" CLOB,
	"PRIORITY" VARCHAR2(50 CHAR),
	"SEVERITY" VARCHAR2(50 CHAR),
	CONSTRAINT "PK_OBJECTPROBLEMS" PRIMARY KEY ("OBJECT_ID","PROBLEM","PROBLEMTYPE")
)
;
CREATE INDEX "IX_OBJECTPROBLEMS_OBJECTID"   
 ON "T_OBJECTPROBLEMS" ("OBJECT_ID") 
;
CREATE INDEX "IX_OBJECTPROBLEMS_PROBLEM"   
 ON "T_OBJECTPROBLEMS" ("PROBLEM") 
;
/

CREATE TABLE "T_OBJECTPROPERTIES"
(
	"PROPERTYID" NUMBER(10) NOT NULL,
	"OBJECT_ID" NUMBER(10) DEFAULT 0  NOT NULL,
	"PROPERTY" VARCHAR2(255 CHAR),
	"VALUE" VARCHAR2(255 CHAR),
	"NOTES" CLOB,
	"EA_GUID" VARCHAR2(40 CHAR),
	CONSTRAINT "PK_OBJECTPROPERTIES" PRIMARY KEY ("PROPERTYID")
)
;
CREATE INDEX "IX_OBJECTPROPERTIES_OBJECTID"   
 ON "T_OBJECTPROPERTIES" ("OBJECT_ID") 
;
CREATE INDEX "IX_OBJECTPROPERTIES_VALUE"   
 ON "T_OBJECTPROPERTIES" ("VALUE") 
;
CREATE INDEX "IX_OBJECTPROPERTIES_PROPERTY"   
 ON "T_OBJECTPROPERTIES" ("PROPERTY") 
;
CREATE INDEX "IX_OBJECTPROPERTIES_OBJIDPROP"   
 ON "T_OBJECTPROPERTIES" ("OBJECT_ID","PROPERTY") 
;
CREATE INDEX "IX_OBJECTPROPERTIES_EAGUID"   
 ON "T_OBJECTPROPERTIES" ("EA_GUID") 
;
/

CREATE TABLE "T_OBJECTREQUIRES"
(
	"REQID" NUMBER(10) NOT NULL,
	"OBJECT_ID" NUMBER(10) DEFAULT 0  NOT NULL,
	"REQUIREMENT" VARCHAR2(255 CHAR),
	"REQTYPE" VARCHAR2(255 CHAR),
	"STATUS" VARCHAR2(50 CHAR),
	"NOTES" CLOB,
	"STABILITY" VARCHAR2(50 CHAR),
	"DIFFICULTY" VARCHAR2(50 CHAR),
	"PRIORITY" VARCHAR2(50 CHAR),
	"LASTUPDATE" VARCHAR2(19 CHAR) DEFAULT SYSDATE,
	CONSTRAINT "PK_OBJECTREQUIRES" PRIMARY KEY ("REQID")
)
;
CREATE INDEX "IX_OBJECTREQUIRES_OBJECTID"   
 ON "T_OBJECTREQUIRES" ("OBJECT_ID") 
;
CREATE INDEX "IX_OBJECTREQUIRES_REQUIREMENT"   
 ON "T_OBJECTREQUIRES" ("REQUIREMENT") 
;
/

CREATE TABLE "T_OBJECTRESOURCE"
(
	"OBJECT_ID" NUMBER(10) DEFAULT 0  NOT NULL,
	"Resource" VARCHAR2(255 CHAR) NOT NULL,
	"ROLE" VARCHAR2(255 CHAR) NOT NULL,
	"TIME" FLOAT(126) DEFAULT 0,
	"NOTES" CLOB,
	"PERCENTCOMPLETE" NUMBER(5) DEFAULT 0,
	"DATESTART" DATE,
	"DATEEND" DATE,
	"HISTORY" CLOB,
	"EXPECTEDHOURS" NUMBER(10),
	"ACTUALHOURS" NUMBER(10),
	CONSTRAINT "PK_OBJECTRESOURCE" PRIMARY KEY ("OBJECT_ID","Resource","ROLE")
)
;
CREATE INDEX "IX_OBJECTRESOURCE_OBJECTID"   
 ON "T_OBJECTRESOURCE" ("OBJECT_ID") 
;
/

CREATE TABLE "T_OBJECTRISKS"
(
	"OBJECT_ID" NUMBER(10) DEFAULT 0  NOT NULL,
	"RISK" VARCHAR2(255 CHAR) NOT NULL,
	"RISKTYPE" VARCHAR2(12 CHAR),
	"EVALUE" FLOAT(126) DEFAULT 0,
	"NOTES" CLOB,
	CONSTRAINT "PK_OBJECTRISKS" PRIMARY KEY ("OBJECT_ID","RISK")
)
;
CREATE INDEX "IX_OBJECTRISKS_OBJECTID"   
 ON "T_OBJECTRISKS" ("OBJECT_ID") 
;
/

CREATE TABLE "T_OBJECTSCENARIOS"
(
	"OBJECT_ID" NUMBER(10) DEFAULT 0  NOT NULL,
	"SCENARIO" VARCHAR2(255 CHAR) NOT NULL,
	"SCENARIOTYPE" VARCHAR2(12 CHAR),
	"EVALUE" FLOAT(126) DEFAULT 0,
	"NOTES" CLOB,
	"EA_GUID" VARCHAR2(40 CHAR) NOT NULL,
	"XMLCONTENT" CLOB,
	CONSTRAINT "PK_OBJECTSCENARIOS" PRIMARY KEY ("OBJECT_ID","SCENARIO")
)
;
CREATE INDEX "IX_OBJECTSCENARIOS_OIDEVALSCEN"   
 ON "T_OBJECTSCENARIOS" ("OBJECT_ID","EVALUE","SCENARIO") 
;
CREATE INDEX "IX_OBJECTSCENARIOS_OBJECTID"   
 ON "T_OBJECTSCENARIOS" ("OBJECT_ID") 
;
/

CREATE TABLE "T_OBJECTTESTS"
(
	"OBJECT_ID" NUMBER(10) DEFAULT 0  NOT NULL,
	"TEST" VARCHAR2(255 CHAR) NOT NULL,
	"TESTCLASS" NUMBER(10) DEFAULT 0  NOT NULL,
	"TESTTYPE" VARCHAR2(50 CHAR),
	"NOTES" CLOB,
	"INPUTDATA" CLOB,
	"ACCEPTANCECRITERIA" CLOB,
	"STATUS" VARCHAR2(32 CHAR),
	"DATERUN" DATE DEFAULT SYSDATE,
	"RESULTS" CLOB,
	"RUNBY" VARCHAR2(255 CHAR),
	"CHECKBY" VARCHAR2(255 CHAR),
	CONSTRAINT "PK_OBJECTTESTS" PRIMARY KEY ("OBJECT_ID","TEST","TESTCLASS")
)
;
CREATE INDEX "IX_OBJECTTESTS_OBJECTID"   
 ON "T_OBJECTTESTS" ("OBJECT_ID") 
;
CREATE INDEX "IX_OBJECTTESTS_OBJIDTCLASSSTAT"   
 ON "T_OBJECTTESTS" ("OBJECT_ID","TESTCLASS","STATUS") 
;
/

CREATE TABLE "T_OBJECTTRX"
(
	"OBJECT_ID" NUMBER(10) DEFAULT 0  NOT NULL,
	"TRX" VARCHAR2(255 CHAR) NOT NULL,
	"TRXTYPE" VARCHAR2(12 CHAR) NOT NULL,
	"WEIGHT" FLOAT(126) DEFAULT 0,
	"NOTES" CLOB,
	CONSTRAINT "PK_OBJECTTRX" PRIMARY KEY ("OBJECT_ID","TRX","TRXTYPE")
)
;
CREATE INDEX "IX_OBJECTTRX_OBJECTID"   
 ON "T_OBJECTTRX" ("OBJECT_ID") 
;
CREATE INDEX "IX_OBJECTTRX_TRX"   
 ON "T_OBJECTTRX" ("TRX") 
;
/

CREATE TABLE "T_OBJECTTYPES"
(
	"OBJECT_TYPE" VARCHAR2(50 CHAR) NOT NULL,
	"DESCRIPTION" VARCHAR2(255 CHAR),
	"DESIGNOBJECT" NUMBER(10),
	"IMAGEID" NUMBER(5) DEFAULT 0  NOT NULL,
	CONSTRAINT "PK_OBJECTTYPES" PRIMARY KEY ("OBJECT_TYPE")
)
;
CREATE INDEX "IX_OBJECTTYPES_IMAGEID"   
 ON "T_OBJECTTYPES" ("IMAGEID") 
;
/

CREATE TABLE "T_OCF"
(
	"OBJECTTYPE" VARCHAR2(50 CHAR),
	"COMPLEXITYWEIGHT" FLOAT(126) DEFAULT 0                                        
	
)
;
/

CREATE TABLE "T_OPERATION"
(
	"OPERATIONID" NUMBER(10) NOT NULL,
	"OBJECT_ID" NUMBER(10) DEFAULT 0  NOT NULL,
	"NAME" VARCHAR2(255 CHAR) NOT NULL,
	"SCOPE" VARCHAR2(50 CHAR),
	"TYPE" VARCHAR2(255 CHAR),
	"RETURNARRAY" CHAR(1 CHAR),
	"STEREOTYPE" VARCHAR2(50 CHAR),
	"ISSTATIC" CHAR(1 CHAR),
	"CONCURRENCY" VARCHAR2(50 CHAR),
	"NOTES" CLOB,
	"BEHAVIOUR" CLOB,
	"ABSTRACT" CHAR(1 CHAR),
	"GENOPTION" CLOB,
	"SYNCHRONIZED" CHAR(1 CHAR),
	"POS" NUMBER(10),
	"CONST" NUMBER(10),
	"STYLE" VARCHAR2(255 CHAR),
	"PURE" NUMBER(10),
	"THROWS" VARCHAR2(255 CHAR),
	"CLASSIFIER" VARCHAR2(50 CHAR),
	"CODE" CLOB,
	"ISROOT" NUMBER(10),
	"ISLEAF" NUMBER(10),
	"ISQUERY" NUMBER(10),
	"STATEFLAGS" VARCHAR2(255 CHAR),
	"EA_GUID" VARCHAR2(50 CHAR) NOT NULL,
	"STYLEEX" CLOB,
	CONSTRAINT "PK_OPERATION" PRIMARY KEY ("OPERATIONID"),
	CONSTRAINT "UQ_OPERATION_EAGUID" UNIQUE ("EA_GUID")
)
;
CREATE INDEX "IX_OPERATION_CLASSIFIER"   
 ON "T_OPERATION" ("CLASSIFIER") 
;
CREATE INDEX "IX_OPERATION_NAME"   
 ON "T_OPERATION" ("NAME") 
;
CREATE INDEX "IX_OPERATION_OBJECTID"   
 ON "T_OPERATION" ("OBJECT_ID") 
;
CREATE INDEX "IX_OPERATION_OBJECTIDOPID"   
 ON "T_OPERATION" ("OBJECT_ID","OPERATIONID") 
;
/

CREATE TABLE "T_OPERATIONPARAMS"
(
	"OPERATIONID" NUMBER(10) DEFAULT 0  NOT NULL,
	"NAME" VARCHAR2(255 CHAR) NOT NULL,
	"TYPE" VARCHAR2(255 CHAR),
	"Default" VARCHAR2(255 CHAR),
	"NOTES" CLOB,
	"POS" NUMBER(10) NOT NULL,
	"CONST" NUMBER(10),
	"STYLE" VARCHAR2(255 CHAR),
	"KIND" VARCHAR2(12 CHAR),
	"CLASSIFIER" VARCHAR2(50 CHAR),
	"EA_GUID" VARCHAR2(50 CHAR),
	"STYLEEX" CLOB,
	CONSTRAINT "PK_OPERATIONPARAMS" PRIMARY KEY ("OPERATIONID","NAME"),
	CONSTRAINT "UQ_OPERATIONPARAMS_EAGUID" UNIQUE ("EA_GUID")
)
;
CREATE INDEX "IX_OPERATIONPARAMS_CLASSIFIER"   
 ON "T_OPERATIONPARAMS" ("CLASSIFIER") 
;
CREATE INDEX "IX_OPERATIONPARAMS_OPID"   
 ON "T_OPERATIONPARAMS" ("OPERATIONID") 
;
CREATE INDEX "IX_OPERATIONPARAMS_OPIDPOS"   
 ON "T_OPERATIONPARAMS" ("OPERATIONID","POS") 
;
/

CREATE TABLE "T_OPERATIONPOSTS"
(
	"OPERATIONID" NUMBER(10) DEFAULT 0  NOT NULL,
	"POSTCONDITION" VARCHAR2(255 CHAR) NOT NULL,
	"TYPE" VARCHAR2(255 CHAR),
	"NOTES" CLOB,
	CONSTRAINT "PK_OPERATIONPOSTS" PRIMARY KEY ("OPERATIONID","POSTCONDITION")
)
;
CREATE INDEX "IX_OPERATIONPOSTS_OPERATIONID"   
 ON "T_OPERATIONPOSTS" ("OPERATIONID") 
;
/

CREATE TABLE "T_OPERATIONPRES"
(
	"OPERATIONID" NUMBER(10) DEFAULT 0  NOT NULL,
	"PRECONDITION" VARCHAR2(255 CHAR) NOT NULL,
	"TYPE" VARCHAR2(50 CHAR),
	"NOTES" CLOB,
	CONSTRAINT "PK_OPERATIONPRES" PRIMARY KEY ("OPERATIONID","PRECONDITION")
)
;
CREATE INDEX "IX_OPERATIONPRES_OPERATIONID"   
 ON "T_OPERATIONPRES" ("OPERATIONID") 
;
/

CREATE TABLE "T_OPERATIONTAG"
(
	"PROPERTYID" NUMBER(10) NOT NULL,
	"ELEMENTID" NUMBER(10) NOT NULL,
	"PROPERTY" VARCHAR2(255 CHAR),
	"VALUE" VARCHAR2(255 CHAR),
	"NOTES" CLOB,
	"EA_GUID" VARCHAR2(40 CHAR),
	CONSTRAINT "PK_OPERATIONTAG" PRIMARY KEY ("PROPERTYID")
)
;
CREATE INDEX "IX_OPERATIONTAG_ELEMENTID"   
 ON "T_OPERATIONTAG" ("ELEMENTID") 
;
CREATE INDEX "IX_OPERATIONTAG_VALUE"   
 ON "T_OPERATIONTAG" ("VALUE") 
;
CREATE INDEX "IX_OPERATIONTAG_EAGUID"   
 ON "T_OPERATIONTAG" ("EA_GUID") 
;
CREATE INDEX "IX_OPERATIONTAG_PROPERTY"   
 ON "T_OPERATIONTAG" ("PROPERTY") 
;
CREATE INDEX "IX_OPERATIONTAG_ELEMENTIDPROP"   
 ON "T_OPERATIONTAG" ("ELEMENTID","PROPERTY") 
;
/

CREATE TABLE "T_PACKAGE"
(
	"PACKAGE_ID" NUMBER(10) NOT NULL,
	"NAME" VARCHAR2(255 CHAR),
	"PARENT_ID" NUMBER(10) DEFAULT 0  NOT NULL,
	"CREATEDDATE" DATE DEFAULT SYSDATE,
	"MODIFIEDDATE" DATE DEFAULT SYSDATE,
	"NOTES" CLOB,
	"EA_GUID" VARCHAR2(40 CHAR) NOT NULL,
	"XMLPATH" VARCHAR2(255 CHAR),
	"ISCONTROLLED" NUMBER(10),
	"LASTLOADDATE" DATE,
	"LASTSAVEDATE" DATE,
	"VERSION" VARCHAR2(50 CHAR),
	"PROTECTED" NUMBER(10),
	"PKGOWNER" VARCHAR2(255 CHAR),
	"UMLVERSION" VARCHAR2(50 CHAR),
	"USEDTD" NUMBER(10),
	"LOGXML" NUMBER(10),
	"CODEPATH" VARCHAR2(255 CHAR),
	"NAMESPACE" VARCHAR2(50 CHAR),
	"TPOS" NUMBER(10),
	"PACKAGEFLAGS" VARCHAR2(255 CHAR),
	"BATCHSAVE" NUMBER(10),
	"BATCHLOAD" NUMBER(10),
	CONSTRAINT "PK_PACKAGE" PRIMARY KEY ("PACKAGE_ID"),
	CONSTRAINT "UQ_PACKAGE_EAGUID" UNIQUE ("EA_GUID")
)
;
CREATE INDEX "IX_PACKAGE_NAME"   
 ON "T_PACKAGE" ("NAME") 
;
CREATE INDEX "IX_PACKAGE_PARENTID"   
 ON "T_PACKAGE" ("PARENT_ID") 
;
/

CREATE TABLE "T_PALETTE"
(
	"PALETTEID" NUMBER(10) NOT NULL,
	"NAME" VARCHAR2(255 CHAR),
	"TYPE" VARCHAR2(255 CHAR),
	CONSTRAINT "PK_PALETTE" PRIMARY KEY ("PALETTEID")
)
;
/

CREATE TABLE "T_PALETTEITEM"
(
	"PALETTEID" NUMBER(10),
	"ITEMID" NUMBER(10)
)
;
/

CREATE TABLE "T_PHASE"
(
	"PHASEID" VARCHAR2(40 CHAR) NOT NULL,
	"PHASENAME" VARCHAR2(100 CHAR) NOT NULL,
	"PHASENOTES" CLOB,
	"PHASESTYLE" VARCHAR2(255 CHAR),
	"STARTDATE" DATE,
	"ENDDATE" DATE,
	"PHASECONTENT" CLOB,
	CONSTRAINT "PK_PHASE" PRIMARY KEY ("PHASEID")
)
;
/

CREATE TABLE "T_PRIMITIVES"
(
	"DATATYPE" VARCHAR2(50 CHAR) NOT NULL,
	"DESCRIPTION" VARCHAR2(50 CHAR),
	CONSTRAINT "PK_PRIMITIVES" PRIMARY KEY ("DATATYPE")
)
;
/

CREATE TABLE "T_PROBLEMTYPES"
(
	"PROBLEMTYPE" VARCHAR2(12 CHAR) NOT NULL,
	"DESCRIPTION" VARCHAR2(255 CHAR),
	"NUMERICWEIGHT" FLOAT(126) DEFAULT 1  NOT NULL,
	"NOTES" VARCHAR2(255 CHAR),
	CONSTRAINT "PK_PROBLEMTYPES" PRIMARY KEY ("PROBLEMTYPE")
)
;
CREATE INDEX "IX_PROBLEMTYPES_NUMERICWEIGHT"   
 ON "T_PROBLEMTYPES" ("NUMERICWEIGHT") 
;
/

CREATE TABLE "T_PROJECTROLES"
(
	"ROLE" VARCHAR2(255 CHAR) NOT NULL,
	"DESCRIPTION" VARCHAR2(255 CHAR),
	"NOTES" CLOB,
	CONSTRAINT "PK_PROJECTROLES" PRIMARY KEY ("ROLE")
)
;
/

CREATE TABLE "T_PROPERTYTYPES"
(
	"PROPERTY" VARCHAR2(50 CHAR) NOT NULL,
	"DESCRIPTION" VARCHAR2(50 CHAR),
	"NOTES" CLOB,
	CONSTRAINT "PK_PROPERTYTYPES" PRIMARY KEY ("PROPERTY")
)
;
/

CREATE TABLE "T_REQUIRETYPES"
(
	"REQUIREMENT" VARCHAR2(12 CHAR) NOT NULL,
	"DESCRIPTION" VARCHAR2(50 CHAR),
	"NUMERICWEIGHT" FLOAT(126) DEFAULT 1  NOT NULL,
	"NOTES" VARCHAR2(255 CHAR),
	CONSTRAINT "PK_REQUIRETYPES" PRIMARY KEY ("REQUIREMENT")
)
;
CREATE INDEX "IX_REQUIRETYPES_NUMERICWEIGHT"   
 ON "T_REQUIRETYPES" ("NUMERICWEIGHT") 
;
/

CREATE TABLE "T_RESOURCES"
(
	"NAME" VARCHAR2(255 CHAR) NOT NULL,
	"ORGANISATION" VARCHAR2(255 CHAR),
	"PHONE1" VARCHAR2(50 CHAR),
	"PHONE2" VARCHAR2(50 CHAR),
	"MOBILE" VARCHAR2(50 CHAR),
	"FAX" VARCHAR2(50 CHAR),
	"EMAIL" VARCHAR2(255 CHAR),
	"ROLES" VARCHAR2(255 CHAR),
	"NOTES" VARCHAR2(255 CHAR),
	CONSTRAINT "PK_RESOURCES" PRIMARY KEY ("NAME")
)
;
/

CREATE TABLE "T_RISKTYPES"
(
	"RISK" VARCHAR2(12 CHAR) NOT NULL,
	"DESCRIPTION" VARCHAR2(50 CHAR),
	"NUMERICWEIGHT" FLOAT(126) DEFAULT 0  NOT NULL,
	"NOTES" VARCHAR2(255 CHAR),
	CONSTRAINT "PK_RISKTYPES" PRIMARY KEY ("RISK")
)
;
CREATE INDEX "IX_RISKTYPES_NUMERICWEIGHT"   
 ON "T_RISKTYPES" ("NUMERICWEIGHT") 
;
/

CREATE TABLE "T_ROLECONSTRAINT"
(
	"CONNECTORID" NUMBER(10) DEFAULT 0  NOT NULL,
	"Constraint" VARCHAR2(255 CHAR) NOT NULL,
	"CONNECTOREND" VARCHAR2(50 CHAR) NOT NULL,
	"CONSTRAINTTYPE" VARCHAR2(12 CHAR) NOT NULL,
	"NOTES" CLOB,
	CONSTRAINT "PK_ROLECONSTRAINT" PRIMARY KEY ("CONNECTORID","Constraint","CONNECTOREND","CONSTRAINTTYPE")
)
;
CREATE INDEX "IX_ROLECONSTRAINT_CONNECTORID"   
 ON "T_ROLECONSTRAINT" ("CONNECTORID") 
;
CREATE INDEX "IX_ROLECONSTRAINT_CONSTRAINT"   
 ON "T_ROLECONSTRAINT" ("Constraint") 
;
/

CREATE TABLE "T_RTF"
(
	"TYPE" VARCHAR2(50 CHAR),
	"TEMPLATE" CLOB
)
;
/

CREATE TABLE "T_RTFREPORT"
(
	"TEMPLATEID" VARCHAR2(200 CHAR) NOT NULL,
	"ROOTPACKAGE" NUMBER(10) DEFAULT 0,
	"FILENAME" VARCHAR2(255 CHAR),
	"DETAILS" NUMBER(10),
	"PROCESSCHILDREN" NUMBER(10),
	"SHOWDIAGRAMS" NUMBER(10),
	"HEADING" VARCHAR2(255 CHAR),
	"REQUIREMENTS" NUMBER(10),
	"ASSOCIATIONS" NUMBER(10),
	"SCENARIOS" NUMBER(10),
	"CHILDDIAGRAMS" NUMBER(10),
	"ATTRIBUTES" NUMBER(10),
	"METHODS" NUMBER(10),
	"IMAGETYPE" NUMBER(10) DEFAULT 0,
	"PAGING" NUMBER(10),
	"INTRO" CLOB,
	"RESOURCES" NUMBER(10) DEFAULT 1,
	"Constraints" NUMBER(10) DEFAULT 1,
	"TAGGED" NUMBER(10),
	"SHOWTAG" NUMBER(10),
	"SHOWALIAS" NUMBER(10),
	"PDATA1" VARCHAR2(255 CHAR),
	"PDATA2" VARCHAR2(255 CHAR),
	"PDATA3" VARCHAR2(255 CHAR),
	"PDATA4" CLOB,
	CONSTRAINT "PK_RTFREPORT" PRIMARY KEY ("TEMPLATEID")
)
;
/

CREATE TABLE "T_RULES"
(
	"RULEID" VARCHAR2(50 CHAR) NOT NULL,
	"RULENAME" VARCHAR2(255 CHAR) NOT NULL,
	"RULETYPE" VARCHAR2(255 CHAR) NOT NULL,
	"RULEACTIVE" NUMBER(10) NOT NULL,
	"ERRORMSG" VARCHAR2(255 CHAR),
	"FLAGS" VARCHAR2(255 CHAR),
	"RULEOCL" CLOB,
	"RULEXML" CLOB,
	"NOTES" CLOB,
	CONSTRAINT "PK_RULES" PRIMARY KEY ("RULEID")
)
;
/

CREATE TABLE "T_SCENARIOTYPES"
(
	"SCENARIOTYPE" VARCHAR2(12 CHAR) NOT NULL,
	"DESCRIPTION" VARCHAR2(50 CHAR),
	"NUMERICWEIGHT" FLOAT(126) DEFAULT 1  NOT NULL,
	"NOTES" VARCHAR2(255 CHAR),
	CONSTRAINT "PK_SCENARIOTYPES" PRIMARY KEY ("SCENARIOTYPE")
)
;
CREATE INDEX "IX_SCENARIOSTYPES_NUMWEIGHT"   
 ON "T_SCENARIOTYPES" ("NUMERICWEIGHT") 
;
/

CREATE TABLE "T_SCRIPT"
(
	"SCRIPTID" NUMBER(10) NOT NULL,
	"SCRIPTCATEGORY" VARCHAR2(100 CHAR),
	"SCRIPTNAME" VARCHAR2(150 CHAR),
	"SCRIPTAUTHOR" VARCHAR2(255 CHAR),
	"NOTES" CLOB,
	"SCRIPT" CLOB,
	CONSTRAINT "PK_SCRIPT" PRIMARY KEY ("SCRIPTID")
)
;
CREATE INDEX "IX_SCRIPT_SCRIPTCATEGORY"   
 ON "T_SCRIPT" ("SCRIPTCATEGORY") 
;
/

CREATE TABLE "T_SECGROUP"
(
	"GROUPID" VARCHAR2(40 CHAR) NOT NULL,
	"GROUPNAME" VARCHAR2(32 CHAR) NOT NULL,
	"DESCRIPTION" VARCHAR2(100 CHAR),
	CONSTRAINT "PK_SECGROUP" PRIMARY KEY ("GROUPID")
)
;
/

CREATE TABLE "T_SECGROUPPERMISSION"
(
	"GROUPID" VARCHAR2(40 CHAR) NOT NULL,
	"PERMISSIONID" NUMBER(10) NOT NULL,
	CONSTRAINT "PK_SECGROUPPERMISSION" PRIMARY KEY ("GROUPID","PERMISSIONID")
)
;
/

CREATE TABLE "T_SECLOCKS"
(
	"USERID" VARCHAR2(40 CHAR) NOT NULL,
	"GROUPID" VARCHAR2(40 CHAR),
	"ENTITYTYPE" VARCHAR2(32 CHAR) NOT NULL,
	"ENTITYID" VARCHAR2(40 CHAR) NOT NULL,
	"TIMESTAMP" DATE NOT NULL,
	"LOCKTYPE" VARCHAR2(255 CHAR),
	CONSTRAINT "PK_SECLOCKS" PRIMARY KEY ("ENTITYID")
)
;
CREATE INDEX "IX_SECLOCKS_ENTITYIDUSERID"   
 ON "T_SECLOCKS" ("ENTITYID","USERID") 
;
CREATE INDEX "IX_SECLOCKS_ENTITYIDTYPE"   
 ON "T_SECLOCKS" ("ENTITYID","ENTITYTYPE") 
;
CREATE INDEX "IX_SECLOCKS_ENTITYUSRTYPE"   
 ON "T_SECLOCKS" ("ENTITYID","USERID","ENTITYTYPE") 
;
CREATE INDEX "IX_SECLOCKS_GROUPIDUSERID"   
 ON "T_SECLOCKS" ("GROUPID","USERID") 
;
CREATE INDEX "IX_SECLOCKS_GROUPID"   
 ON "T_SECLOCKS" ("GROUPID") 
;
/

CREATE TABLE "T_SECPERMISSION"
(
	"PERMISSIONID" NUMBER(10) NOT NULL,
	"PERMISSIONNAME" VARCHAR2(50 CHAR) NOT NULL,
	CONSTRAINT "PK_SECPERMISSION" PRIMARY KEY ("PERMISSIONID")
)
;
/

CREATE TABLE "T_SECPOLICIES"
(
	"PROPERTY" VARCHAR2(100 CHAR) NOT NULL,
	"VALUE" VARCHAR2(255 CHAR) NOT NULL,
	CONSTRAINT "PK_SECPOLICIES" PRIMARY KEY ("PROPERTY")
)
;
/

CREATE TABLE "T_SECUSER"
(
	"USERID" VARCHAR2(40 CHAR) NOT NULL,
	"USERLOGIN" VARCHAR2(255 CHAR) NOT NULL,
	"FIRSTNAME" VARCHAR2(50 CHAR) NOT NULL,
	"SURNAME" VARCHAR2(50 CHAR) NOT NULL,
	"DEPARTMENT" VARCHAR2(50 CHAR),
	"PASSWORD" VARCHAR2(12 CHAR),
	CONSTRAINT "PK_SECUSER" PRIMARY KEY ("USERID")
)
;
/

CREATE TABLE "T_SECUSERGROUP"
(
	"USERID" VARCHAR2(40 CHAR) NOT NULL,
	"GROUPID" VARCHAR2(40 CHAR) NOT NULL,
	CONSTRAINT "PK_SECUSERGROUP" PRIMARY KEY ("USERID","GROUPID")
)
;
/

CREATE TABLE "T_SECUSERPERMISSION"
(
	"USERID" VARCHAR2(40 CHAR) NOT NULL,
	"PERMISSIONID" NUMBER(10) NOT NULL,
	CONSTRAINT "PK_SECUSERPERMISSION" PRIMARY KEY ("USERID","PERMISSIONID")
)
;
/

CREATE TABLE "T_SNAPSHOT"
(
	"SNAPSHOTID" VARCHAR2(40 CHAR) NOT NULL,
	"SERIESID" VARCHAR2(40 CHAR) NOT NULL,
	"POSITION" NUMBER(10) NOT NULL,
	"SNAPSHOTNAME" VARCHAR2(100 CHAR) NOT NULL,
	"NOTES" CLOB,
	"STYLE" VARCHAR2(255 CHAR) NOT NULL,
	"ELEMENTID" VARCHAR2(40 CHAR),
	"ELEMENTTYPE" VARCHAR2(50 CHAR) NOT NULL,
	"STRCONTENT" CLOB,
	"BINCONTENT1" BLOB,
	"BINCONTENT2" BLOB,
	CONSTRAINT "PK_SNAPSHOT" PRIMARY KEY ("SNAPSHOTID")
)
;
CREATE INDEX "IX_SNAPSHOT_POSITION"   
 ON "T_SNAPSHOT" ("POSITION") 
;
CREATE INDEX "IX_SNAPSHOT_SERIESID"   
 ON "T_SNAPSHOT" ("SERIESID") 
;
/

CREATE TABLE "T_STATUSTYPES"
(
	"STATUS" VARCHAR2(50 CHAR) NOT NULL,
	"DESCRIPTION" VARCHAR2(50 CHAR),
	CONSTRAINT "PK_STATUSTYPES" PRIMARY KEY ("STATUS")
)
;
/

CREATE TABLE "T_STEREOTYPES"
(
	"STEREOTYPE" VARCHAR2(255 CHAR) NOT NULL,
	"APPLIESTO" VARCHAR2(255 CHAR) NOT NULL,
	"DESCRIPTION" VARCHAR2(255 CHAR),
	"MFENABLED" NUMBER(10),
	"MFPATH" VARCHAR2(255 CHAR),
	"METAFILE" BLOB,
	"STYLE" CLOB,
	"EA_GUID" VARCHAR2(50 CHAR),
	"VISUALTYPE" VARCHAR2(100 CHAR),
	CONSTRAINT "PK_STEREOTYPES" PRIMARY KEY ("STEREOTYPE","APPLIESTO")
)
;
CREATE INDEX "IX_STEROTYPES_STEREOTYPE"   
 ON "T_STEREOTYPES" ("STEREOTYPE") 
;
CREATE INDEX "IX_STEREOTYPES_EAGUID"   
 ON "T_STEREOTYPES" ("EA_GUID") 
;
/

CREATE TABLE "T_TAGGEDVALUE"
(
	"PROPERTYID" VARCHAR2(40 CHAR) NOT NULL,
	"ELEMENTID" VARCHAR2(40 CHAR) NOT NULL,
	"BASECLASS" VARCHAR2(100 CHAR) NOT NULL,
	"TAGVALUE" CLOB,
	"NOTES" CLOB,
	CONSTRAINT "PK_TAGGEDVALUE" PRIMARY KEY ("PROPERTYID")
)
;
CREATE INDEX "IX_TAGGEDVALUE_ELEMENTID"   
 ON "T_TAGGEDVALUE" ("ELEMENTID") 
;
/

CREATE TABLE "T_TASKS"
(
	"TASKID" NUMBER(10) NOT NULL,
	"NAME" VARCHAR2(255 CHAR),
	"TASKTYPE" VARCHAR2(255 CHAR),
	"NOTES" CLOB,
	"PRIORITY" VARCHAR2(255 CHAR),
	"STATUS" VARCHAR2(255 CHAR),
	"OWNER" VARCHAR2(255 CHAR),
	"STARTDATE" DATE,
	"ENDDATE" DATE,
	"PHASE" VARCHAR2(50 CHAR),
	"HISTORY" CLOB,
	"PERCENT" NUMBER(10),
	"TOTALTIME" NUMBER(10),
	"ACTUALTIME" NUMBER(10),
	"ASSIGNEDTO" VARCHAR2(100 CHAR),
	CONSTRAINT "PK_TASKS" PRIMARY KEY ("TASKID")
)
;
/

CREATE TABLE "T_TCF"
(
	"TCFID" VARCHAR2(12 CHAR) NOT NULL,
	"DESCRIPTION" VARCHAR2(50 CHAR),
	"WEIGHT" FLOAT(126) DEFAULT 1  NOT NULL,
	"VALUE" FLOAT(126) DEFAULT 0,
	"NOTES" VARCHAR2(255 CHAR),
	CONSTRAINT "PK_TCF" PRIMARY KEY ("TCFID")
)
;
CREATE INDEX "IX_TCF_WEIGHT"   
 ON "T_TCF" ("WEIGHT") 
;
/

CREATE TABLE "T_TEMPLATE"
(
	"TEMPLATEID" VARCHAR2(40 CHAR) NOT NULL,
	"TEMPLATETYPE" VARCHAR2(50 CHAR) NOT NULL,
	"TEMPLATENAME" VARCHAR2(100 CHAR) NOT NULL,
	"NOTES" VARCHAR2(255 CHAR),
	"STYLE" VARCHAR2(255 CHAR),
	"TEMPLATE" CLOB,
	CONSTRAINT "PK_TEMPLATE" PRIMARY KEY ("TEMPLATEID")
)
;
/

CREATE TABLE "T_TESTCLASS"
(
	"TESTCLASS" VARCHAR2(50 CHAR) NOT NULL,
	"DESCRIPTION" VARCHAR2(50 CHAR),
	CONSTRAINT "PK_TESTCLASS" PRIMARY KEY ("TESTCLASS")
)
;
/

CREATE TABLE "T_TESTPLANS"
(
	"PLANID" VARCHAR2(50 CHAR) NOT NULL,
	"CATEGORY" VARCHAR2(100 CHAR) NOT NULL,
	"NAME" VARCHAR2(150 CHAR) NOT NULL,
	"AUTHOR" VARCHAR2(255 CHAR),
	"NOTES" CLOB,
	"TESTPLAN" CLOB,
	CONSTRAINT "PK_TESTPLANS" PRIMARY KEY ("PLANID")
)
;
/

CREATE TABLE "T_TESTTYPES"
(
	"TESTTYPE" VARCHAR2(12 CHAR) NOT NULL,
	"DESCRIPTION" VARCHAR2(50 CHAR),
	"NUMERICWEIGHT" FLOAT(126) DEFAULT 1  NOT NULL,
	"NOTES" VARCHAR2(255 CHAR),
	CONSTRAINT "PK_TESTTYPES" PRIMARY KEY ("TESTTYPE")
)
;
CREATE INDEX "IX_TESTTYPES_NUMERICWEIGHT"   
 ON "T_TESTTYPES" ("NUMERICWEIGHT") 
;
/

CREATE TABLE "T_TRXTYPES"
(
	"TRX" VARCHAR2(255 CHAR),
	"DESCRIPTION" VARCHAR2(50 CHAR),
	"NUMERICWEIGHT" FLOAT(126) DEFAULT 1,
	"NOTES" CLOB,
	"STYLE" CLOB,
	"TRX_ID" NUMBER(10) NOT NULL,
	CONSTRAINT "PK_TRXTYPES" PRIMARY KEY ("TRX_ID")
)
;
CREATE INDEX "IX_TRXTYPES_DESCRIPTION"   
 ON  "T_TRXTYPES" ("DESCRIPTION")
;
CREATE INDEX "IX_TRXTYPES_NUMERICWEIGHT"   
 ON "T_TRXTYPES" ("NUMERICWEIGHT") 
;
CREATE INDEX "IX_TRXTYPES_TRX"   
 ON  "T_TRXTYPES" ("TRX")
;
/

CREATE TABLE "T_UMLPATTERN"
(
	"PATTERNID" NUMBER(10) NOT NULL,
	"PATTERNCATEGORY" VARCHAR2(100 CHAR),
	"PATTERNNAME" VARCHAR2(150 CHAR) NOT NULL,
	"STYLE" VARCHAR2(255 CHAR),
	"NOTES" CLOB,
	"PATTERNXML" CLOB NOT NULL,
	"VERSION" VARCHAR2(50 CHAR),
	CONSTRAINT "PK_UMLPATTERN" PRIMARY KEY ("PATTERNID")
)
;
/

CREATE TABLE "T_VERSION"
(
	"ELEMENTID" VARCHAR2(50 CHAR) NOT NULL,
	"VERSIONID" VARCHAR2(255 CHAR) NOT NULL,
	"ELEMENTTYPE" VARCHAR2(100 CHAR) NOT NULL,
	"FLAGS" VARCHAR2(255 CHAR),
	"EXTERNALFILE" VARCHAR2(255 CHAR),
	"NOTES" VARCHAR2(255 CHAR),
	"OWNER" VARCHAR2(255 CHAR),
	"VERSIONDATE" DATE NOT NULL,
	"BRANCH" VARCHAR2(255 CHAR),
	"ELEMENTXML" CLOB,
	CONSTRAINT "PK_VERSION" PRIMARY KEY ("ELEMENTID","VERSIONID")
)
;
CREATE INDEX "IX_VERSION_ELEMENTID"   
 ON "T_VERSION" ("ELEMENTID") 
;
/

CREATE TABLE "T_XREF"
(
	"XREFID" VARCHAR2(255 CHAR) NOT NULL,
	"NAME" VARCHAR2(255 CHAR),
	"TYPE" VARCHAR2(255 CHAR) NOT NULL,
	"VISIBILITY" VARCHAR2(255 CHAR),
	"NAMESPACE" VARCHAR2(255 CHAR),
	"REQUIREMENT" VARCHAR2(255 CHAR),
	"Constraint" VARCHAR2(255 CHAR),
	"BEHAVIOR" VARCHAR2(255 CHAR),
	"PARTITION" VARCHAR2(255 CHAR),
	"DESCRIPTION" CLOB,
	"CLIENT" VARCHAR2(255 CHAR),
	"SUPPLIER" VARCHAR2(255 CHAR),
	"LINK" VARCHAR2(255 CHAR),
	CONSTRAINT "PK_XREF" PRIMARY KEY ("XREFID")
)
;
CREATE INDEX "IX_XREF_CLIENT"   
 ON "T_XREF" ("CLIENT") 
;
CREATE INDEX "IX_XREF_NAME"   
 ON "T_XREF" ("NAME") 
;
CREATE INDEX "IX_XREF_SUPPLIER"   
 ON "T_XREF" ("SUPPLIER") 
;
CREATE INDEX "IX_XREF_TYPE"   
 ON "T_XREF" ("TYPE") 
;
CREATE INDEX "IX_XREF_NAMETYPE"   
 ON "T_XREF" ("NAME","TYPE") 
;
/

CREATE TABLE "T_XREFSYSTEM"
(
	"XREFID" VARCHAR2(255 CHAR) NOT NULL,
	"NAME" VARCHAR2(255 CHAR),
	"TYPE" VARCHAR2(255 CHAR) NOT NULL,
	"VISIBILITY" VARCHAR2(255 CHAR),
	"NAMESPACE" VARCHAR2(255 CHAR),
	"REQUIREMENT" VARCHAR2(255 CHAR),
	"Constraint" VARCHAR2(255 CHAR),
	"BEHAVIOR" VARCHAR2(255 CHAR),
	"PARTITION" VARCHAR2(255 CHAR),
	"DESCRIPTION" CLOB,
	"CLIENT" VARCHAR2(255 CHAR),
	"SUPPLIER" VARCHAR2(255 CHAR),
	"LINK" VARCHAR2(255 CHAR),
	"TOOLID" VARCHAR2(50 CHAR),
	CONSTRAINT "PK_XREFSYSTEM" PRIMARY KEY ("XREFID")
)
;
CREATE INDEX "IX_XREFSYSTEM_CLIENT"   
 ON "T_XREFSYSTEM" ("CLIENT") 
;
CREATE INDEX "IX_XREFSYSTEM_SUPPLIER"   
 ON "T_XREFSYSTEM" ("SUPPLIER") 
;
CREATE INDEX "IX_XREFSYSTEM_TYPE"   
 ON "T_XREFSYSTEM" ("TYPE") 
;
/

CREATE TABLE "T_XREFUSER"
(
	"XREFID" VARCHAR2(255 CHAR) NOT NULL,
	"NAME" VARCHAR2(255 CHAR),
	"TYPE" VARCHAR2(255 CHAR) NOT NULL,
	"VISIBILITY" VARCHAR2(255 CHAR),
	"NAMESPACE" VARCHAR2(255 CHAR),
	"REQUIREMENT" VARCHAR2(255 CHAR),
	"Constraint" VARCHAR2(255 CHAR),
	"BEHAVIOR" VARCHAR2(255 CHAR),
	"PARTITION" VARCHAR2(255 CHAR),
	"DESCRIPTION" CLOB,
	"CLIENT" VARCHAR2(255 CHAR),
	"SUPPLIER" VARCHAR2(255 CHAR),
	"LINK" VARCHAR2(255 CHAR),
	"TOOLID" VARCHAR2(50 CHAR),
	CONSTRAINT "PK_XREFUSER" PRIMARY KEY ("XREFID")
)
;
CREATE INDEX "IX_XREFUSER_CLIENT"   
 ON "T_XREFUSER" ("CLIENT") 
;
CREATE INDEX "IX_XREFUSER_SUPPLIER"   
 ON "T_XREFUSER" ("SUPPLIER") 
;
CREATE INDEX "IX_XREFUSER_TYPE"   
 ON "T_XREFUSER" ("TYPE") 
;
/

CREATE TABLE  "USYS_SCHEMA"
(
	"V1558" VARCHAR2(255) NOT NULL,
	CONSTRAINT "PK_USYS_SCHEMA" PRIMARY KEY ("V1558")
)
;
/

CREATE TABLE "USYS_SYSTEM"
(
	"PROPERTY" VARCHAR2(50 CHAR) NOT NULL,
	"VALUE" VARCHAR2(50 CHAR),
	CONSTRAINT "PK_USYSSYSTEM" PRIMARY KEY ("PROPERTY")
)
;
/

CREATE TABLE "USYSOLDTABLES"
(
	"TABLENAME" VARCHAR2(50 CHAR),
	"NEWNAME" VARCHAR2(50 CHAR),
	"RELORDER" NUMBER(10) DEFAULT 0,
	"FIXCODE" NUMBER(10)
)
;
/

CREATE TABLE "USYSQUERIES"
(
	"QUERYNAME" VARCHAR2(50 CHAR),
	"NEWNAME" VARCHAR2(50 CHAR),
	"FIXCODE" NUMBER(10)
)
;
/

CREATE TABLE "USYSTABLES"
(
	"TABLENAME" VARCHAR2(50 CHAR) NOT NULL,
	"RELORDER" NUMBER(10) DEFAULT 0,
	"DISPLAYNAME" VARCHAR2(50 CHAR),
	"FROMVER" VARCHAR2(50 CHAR),
	"TOVER" VARCHAR2(50 CHAR),
	CONSTRAINT "PK_USYSTABLES" PRIMARY KEY ("TABLENAME")
)
;
/
